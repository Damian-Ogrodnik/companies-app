{"version":3,"sources":["redux/data/dataReducer.js","redux/data/dataTypes.js","redux/pagination/paginationReducer.js","redux/pagination/paginationTypes.js","redux/dataCompany/dataCompanyReducer.js","redux/dataCompany/dataCompanyTypes.js","redux/rootReducer.js","redux/store.js","redux/data/dataActions.js","services/data.js","redux/data/dataUtils.js","components/Search/Search.js","redux/pagination/paginationActions.js","redux/pagination/paginationUtils.js","components/Information/Information.js","components/Pagination/Pagination.js","services/companyDetails.js","services/chart.js","components/Chart/Chart.js","components/DateRange/DateRange.js","redux/dataCompany/dataCompanyUtils.js","redux/dataCompany/dataCompanyActions.js","components/Error/Error.js","components/Loader/Loader.js","components/withLoading/withLoading.js","components/CompanyDetails/CompanyDetails.js","components/CompanyDetailsModal/CompanyDetailsModal.js","components/TableRow/TableRow.js","components/Table/Table.js","components/TableWrapper/TableWrapper.js","index.js","App.js"],"names":["initialState","companies","loading","error","filteredCompanies","dataReducer","state","action","type","payload","pageNumber","paginatedCompanies","paginationReducer","incomes","startDate","stopDate","dataComanyReducer","rootReducer","combineReducers","data","pagination","companyDetails","dataCompanyReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","setFilteredCompanies","getIncomes","a","map","axios","get","id","response","income","forEach","element","parseFloat","value","Math","round","Number","EPSILON","companiesWithIncomes","sorted","Promise","all","then","resolved","sort","compare","b","companyA","companyB","comparison","filterCompanies","search","dispatch","filterArray","actions","console","log","array","filter","name","toLowerCase","includes","filteredArray","Search","useDispatch","useSelector","handleChange","e","target","className","placeholder","onChange","setPage","paginateSuccess","paginateFailure","paginateCompanies","page","postsPerPage","indexOfFirstPost","indexOfLastPost","slice","currentPosts","message","Information","msg","Provider","Pagination","useState","active","setActive","pageNumbers","setPageNumbers","useEffect","newArray","i","ceil","length","push","calculatePages","renderIcon","left","onClick","downNumber","pageDown","upNumber","pageUp","start","stop","number","key","renderPagination","getLastMonthIncome","date","Date","prevMonth","getMonth","sum","getStartStopDates","dates","maxDate","max","apply","minDate","min","isNaN","filteredIncomes","totalIncome","parsedValue","averageIncome","getMonthIncomes","monthDate","getFullYear","parseInt","incomesStandarized","sumIncomeByDates","result","standarizedIncomes","this","Object","create","dateA","dateB","Chart","setData","width","height","tick","fill","size","padding","right","dataKey","interval","strokeDasharray","wrapperStyle","border","borderRadius","overflow","stroke","DateRange","maxDateRange","setMaxDateRange","minDateRange","setMinDateRange","setStartDate","endDate","setEndDate","Boolean","beginDate","setDates","selected","selectsStart","placeholderText","selectsEnd","Error","Loader","color","withLoading","WrappedComponent","props","companyDetailsWithLoading","basicData","city","openModal","lastMonthIncome","setLastMonthIncome","setTotalIncome","setAverageIncome","monthIncomes","setMonthIncomes","fetchCompanyDetails","CompanyDetailsModal","setOpenModal","Modal","setAppElement","isOpen","contentLabel","overlayClassName","TableRow","details","header","tableWithLoading","companiesSortedIncome","keys","TableWrapper","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39171ed3.chunk.js","sourcesContent":["import * as types from \"./dataTypes\";\r\n\r\nconst initialState = {\r\n  companies: [],\r\n  loading: false,\r\n  error: null,\r\n  filteredCompanies: null\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case types.START_FETCH:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case types.FETCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        companies: payload.companies\r\n      };\r\n    case types.FETCH_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload.error\r\n      };\r\n    case types.FILTERED_COMPANIES:\r\n      return {\r\n        ...state,\r\n        filteredCompanies: payload.filteredCompanies\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","export const START_FETCH = \"START_FETCH\";\r\nexport const FETCH_SUCCESS = \"FETCH_SUCCESS\";\r\nexport const FETCH_FAILURE = \"FETCH_FAILURE\";\r\nexport const FILTERED_COMPANIES = \"FILTERED_COMPANIES\";\r\n","import * as types from \"./paginationTypes\";\r\n\r\nconst initialState = {\r\n  pageNumber: 1,\r\n  paginatedCompanies: [],\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nconst paginationReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case types.SET_PAGE:\r\n      return {\r\n        ...state,\r\n        pageNumber: payload.pageNumber,\r\n        loading: true\r\n      };\r\n    case types.PAGINATE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        paginatedCompanies: payload.paginatedCompanies\r\n      };\r\n    case types.PAGINATE_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload.error\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default paginationReducer;\r\n","export const SET_PAGE = \"SET_PAGE\";\r\nexport const PAGINATE_SUCCESS = \"PAGINATE_SUCCESS\";\r\nexport const PAGINATE_FAILURE = \"PAGINATION_FAILURE\";\r\n","import * as types from \"./dataCompanyTypes\";\r\n\r\nconst initialState = {\r\n  incomes: [],\r\n  loading: false,\r\n  error: null,\r\n  startDate: null,\r\n  stopDate: null\r\n};\r\n\r\nconst dataComanyReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case types.START_FETCH_COMPANY_DETAILS:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case types.FETCH_COMPANY_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        incomes: payload.incomes\r\n      };\r\n    case types.FETCH_COMPANY_DETAILS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload.error\r\n      };\r\n    case types.SET_START_DATE:\r\n      return {\r\n        ...state,\r\n        startDate: payload.startDate\r\n      };\r\n    case types.SET_STOP_DATE:\r\n      return {\r\n        ...state,\r\n        stopDate: payload.stopDate\r\n      };\r\n    case types.RESET:\r\n      return {\r\n        incomes: [],\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataComanyReducer;\r\n","export const START_FETCH_COMPANY_DETAILS = \"START_FETCH_COMPANY_DETAILS\";\r\nexport const FETCH_COMPANY_DETAILS_SUCCESS = \"FETCH_COMPANY_DETAILS_SUCCESS\";\r\nexport const FETCH_COMPANY_DETAILS_FAILURE = \"FETCH_COMPANY_DETAILS_FAILURE\";\r\nexport const SET_START_DATE = \"SET_START_DATE\";\r\nexport const SET_STOP_DATE = \"SET_STOP_DATE\";\r\nexport const RESET = \"RESET\";\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport dataReducer from \"./data/dataReducer\";\r\nimport paginationReducer from \"./pagination/paginationReducer\";\r\nimport dataCompanyReducer from \"./dataCompany/dataCompanyReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  data: dataReducer,\r\n  pagination: paginationReducer,\r\n  companyDetails: dataCompanyReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import * as types from \"./dataTypes\";\r\n\r\nexport const startFetch = () => {\r\n  return {\r\n    type: types.START_FETCH\r\n  };\r\n};\r\n\r\nexport const fetchSuccess = companies => {\r\n  return {\r\n    type: types.FETCH_SUCCESS,\r\n    payload: { companies }\r\n  };\r\n};\r\n\r\nexport const fetchFailure = error => {\r\n  return {\r\n    type: types.FETCH_FAILURE,\r\n    payload: { error }\r\n  };\r\n};\r\n\r\nexport const setFilteredCompanies = filteredCompanies => {\r\n  return {\r\n    type: types.FILTERED_COMPANIES,\r\n    payload: { filteredCompanies }\r\n  };\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getIncomes = async companies => {\r\n  const companiesWithIncomes = await companies.map(async companies => {\r\n    const response = await axios.get(\r\n      `https://recruitment.hal.skygate.io/incomes/${companies.id}`\r\n    );\r\n    let income = 0;\r\n    await response.data.incomes.forEach(\r\n      element => (income += parseFloat(element.value))\r\n    );\r\n    return {\r\n      ...companies,\r\n      income: Math.round((income + Number.EPSILON) * 100) / 100\r\n    };\r\n  });\r\n  let sorted = [];\r\n  await Promise.all(companiesWithIncomes).then(async resolved => {\r\n    sorted = await resolved.sort(compare);\r\n  });\r\n  return sorted;\r\n};\r\n\r\nconst compare = (a, b) => {\r\n  const companyA = a.income;\r\n  const companyB = b.income;\r\n\r\n  let comparison = 0;\r\n  if (companyA > companyB) {\r\n    comparison = 1;\r\n  } else if (companyA < companyB) {\r\n    comparison = -1;\r\n  }\r\n  return comparison * -1;\r\n};\r\n","import * as actions from \"./dataActions\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { getIncomes } from \"../../services/data\";\r\n\r\nexport const fetchCompanies = () => async dispatch => {\r\n  try {\r\n    await dispatch(actions.startFetch());\r\n    const response = await axios.get(\r\n      \"https://recruitment.hal.skygate.io/companies\"\r\n    );\r\n    const companiesSortedIncome = await getIncomes(response.data);\r\n    dispatch(actions.fetchSuccess(companiesSortedIncome));\r\n  } catch (error) {\r\n    dispatch(actions.fetchFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const filterCompanies = (search, companies) => async dispatch => {\r\n  try {\r\n    const filteredCompanies = await filterArray(search, companies);\r\n    dispatch(actions.setFilteredCompanies(filteredCompanies));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst filterArray = async (search, array) => {\r\n  const filteredArray = await array.filter(element =>\r\n    element.name.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n  return filteredArray;\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { filterCompanies } from \"../../redux/data/dataUtils\";\r\n\r\nexport const Search = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const companies = useSelector(store => store.data.companies);\r\n\r\n  const handleChange = async e => {\r\n    dispatch(filterCompanies(e.target.value, companies));\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"search__input\"\r\n        placeholder=\"Filter by name \"\r\n        onChange={e => handleChange(e)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import * as types from \"./paginationTypes\";\r\n\r\nexport const setPage = pageNumber => {\r\n  return {\r\n    type: types.SET_PAGE,\r\n    payload: { pageNumber }\r\n  };\r\n};\r\n\r\nexport const paginateSuccess = paginatedCompanies => {\r\n  return {\r\n    type: types.PAGINATE_SUCCESS,\r\n    payload: { paginatedCompanies }\r\n  };\r\n};\r\n\r\nexport const paginateFailure = error => {\r\n  return {\r\n    type: types.PAGINATE_FAILURE,\r\n    payload: { error }\r\n  };\r\n};\r\n","import * as actions from \"./paginationActions\";\r\n\r\nexport const paginateCompanies = (\r\n  page,\r\n  companies,\r\n  postsPerPage = 10\r\n) => async dispatch => {\r\n  try {\r\n    dispatch(actions.setPage(page));\r\n\r\n    const indexOfLastPost = page * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = await companies.slice(\r\n      indexOfFirstPost,\r\n      indexOfLastPost\r\n    );\r\n\r\n    dispatch(actions.paginateSuccess(currentPosts));\r\n  } catch (error) {\r\n    dispatch(actions.paginateFailure(error.message));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { MdError } from \"react-icons/md\";\r\n\r\nexport const Information = ({ msg }) => {\r\n  return (\r\n    <div className=\"information\">\r\n      <IconContext.Provider value={{ className: \"information__icon\" }}>\r\n        <MdError />\r\n      </IconContext.Provider>\r\n      <p>{msg}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { FaArrowLeft, FaArrowRight } from \"react-icons/fa\";\r\n\r\nimport { paginateCompanies } from \"../../redux/pagination/paginationUtils\";\r\n\r\nexport const Pagination = ({ postsPerPage = 10, companies }) => {\r\n  const [active, setActive] = useState(1);\r\n  const [pageNumbers, setPageNumbers] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const calculatePages = async () => {\r\n      let newArray = [];\r\n      for (let i = 1; i <= Math.ceil(companies.length / postsPerPage); i++) {\r\n        newArray.push(i);\r\n      }\r\n      setPageNumbers(newArray);\r\n    };\r\n    calculatePages();\r\n    setActive(1);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [companies]);\r\n\r\n  const paginate = pageNumber => {\r\n    dispatch(paginateCompanies(pageNumber, companies));\r\n    setActive(pageNumber);\r\n  };\r\n\r\n  const pageUp = () => {\r\n    let upNumber =\r\n      active === pageNumbers.length ? pageNumbers.length : active + 1;\r\n    dispatch(paginateCompanies(upNumber, companies));\r\n    setActive(upNumber);\r\n  };\r\n\r\n  const pageDown = () => {\r\n    let downNumber = active - 1 === 0 ? 1 : active - 1;\r\n    dispatch(paginateCompanies(downNumber, companies));\r\n    setActive(downNumber);\r\n  };\r\n\r\n  const renderPagination = () => {\r\n    let start,\r\n      stop = 0;\r\n\r\n    if (active < 6) {\r\n      start = 0;\r\n      stop = 10;\r\n    } else if (active > pageNumbers.length - 9) {\r\n      start = pageNumbers.length - 10;\r\n      stop = pageNumbers.length;\r\n    } else {\r\n      start = active - 5 > 0 ? active - 5 : 0;\r\n      stop = active + 5;\r\n    }\r\n\r\n    return pageNumbers.slice(start, stop).map(number => (\r\n      <li\r\n        key={number}\r\n        className={\"pagination__item\" + (active === number ? \"--active\" : \"\")}\r\n      >\r\n        <button onClick={() => paginate(number)}>{number}</button>\r\n      </li>\r\n    ));\r\n  };\r\n\r\n  const renderIcon = left => {\r\n    if (pageNumbers.length > 10) {\r\n      if (left) {\r\n        return (\r\n          <IconContext.Provider value={{ className: \"pagination__arrow left\" }}>\r\n            <FaArrowLeft onClick={() => pageDown()} />\r\n          </IconContext.Provider>\r\n        );\r\n      } else {\r\n        return (\r\n          <IconContext.Provider\r\n            value={{ className: \"pagination__arrow right\" }}\r\n          >\r\n            <FaArrowRight onClick={() => pageUp()} />\r\n          </IconContext.Provider>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagination__wraper\">\r\n      <ul className=\"pagination\">\r\n        {renderIcon(true)}\r\n        {renderPagination()}\r\n        {renderIcon(false)}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","export const getLastMonthIncome = async incomes => {\r\n  const date = new Date();\r\n  const prevMonth = date.getMonth() - 1;\r\n  let sum = 0;\r\n  await incomes.forEach(({ value, date }) => {\r\n    if (new Date(date).getMonth() === prevMonth) sum += parseFloat(value);\r\n  });\r\n  return Math.round((sum + Number.EPSILON) * 100) / 100;\r\n};\r\n\r\nexport const getStartStopDates = async incomes => {\r\n  const dates = await incomes.map(income => new Date(income.date));\r\n\r\n  let maxDate = new Date(Math.max.apply(null, dates));\r\n  let minDate = new Date(Math.min.apply(null, dates));\r\n\r\n  if (minDate instanceof Date && !isNaN(minDate)) {\r\n    return { minDate, maxDate };\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n\r\nexport const getIncomes = async (startDate, stopDate, incomes) => {\r\n  const filteredIncomes = await incomes.filter(\r\n    ({ date }) => startDate <= new Date(date) && stopDate >= new Date(date)\r\n  );\r\n\r\n  let totalIncome = 0;\r\n\r\n  await filteredIncomes.forEach(({ value }) => {\r\n    let parsedValue = parseFloat(value);\r\n    totalIncome += Math.round((parsedValue + Number.EPSILON) * 100) / 100;\r\n  });\r\n\r\n  let averageIncome =\r\n    Math.round((totalIncome / filteredIncomes.length + Number.EPSILON) * 100) /\r\n      100 || 0;\r\n\r\n  return {\r\n    totalIncome: Math.round((totalIncome + Number.EPSILON) * 100) / 100,\r\n    averageIncome,\r\n    filteredIncomes\r\n  };\r\n};\r\n","export const getMonthIncomes = async incomes => {\r\n  const incomesStandarized = await incomes.map(async ({ date, value }) => {\r\n    let monthDate = `${new Date(date).getFullYear()}-${new Date(\r\n      date\r\n    ).getMonth() + 1}`;\r\n    return {\r\n      date: monthDate,\r\n      income: parseInt(value)\r\n    };\r\n  });\r\n\r\n  return await Promise.all(incomesStandarized).then(async data => {\r\n    let result = await sumIncomeByDates(data);\r\n    return result.sort(compare);\r\n  });\r\n};\r\n\r\nconst sumIncomeByDates = async standarizedIncomes => {\r\n  const result = [];\r\n\r\n  await standarizedIncomes.forEach(function(a) {\r\n    if (!this[a.date]) {\r\n      this[a.date] = { date: a.date, income: 0 };\r\n      result.push(this[a.date]);\r\n    }\r\n    this[a.date].income += a.income;\r\n  }, Object.create(null));\r\n\r\n  return result;\r\n};\r\n\r\nconst compare = (a, b) => {\r\n  const dateA = new Date(a.date);\r\n  const dateB = new Date(b.date);\r\n\r\n  let comparison = 0;\r\n  if (dateA > dateB) {\r\n    comparison = 1;\r\n  } else if (dateA < dateB) {\r\n    comparison = -1;\r\n  }\r\n  return comparison * 1;\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip\r\n} from \"recharts\";\r\nimport { getMonthIncomes } from \"../../services/chart\";\r\n\r\nexport const Chart = ({ incomes }) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getMonthIncomes(incomes).then(result => setData(result));\r\n  }, [incomes]);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      <p>COMPANY MONTHLY INCOME</p>\r\n      <LineChart width={600} height={200} data={data}>\r\n        <XAxis\r\n          tick={{ fill: \"#000\" }}\r\n          size={10}\r\n          padding={{ right: 30 }}\r\n          dataKey=\"date\"\r\n          interval={1}\r\n        />\r\n        <YAxis tick={{ fill: \"#000\" }} />\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <Tooltip\r\n          wrapperStyle={{\r\n            border: \"3px solid #2b2d42\",\r\n            borderRadius: \"1rem\",\r\n            overflow: \"hidden\"\r\n          }}\r\n        />\r\n        <Line type=\"monotone\" dataKey=\"income\" stroke=\"#A5A11E\" />\r\n      </LineChart>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport { setDates } from \"../../redux/dataCompany/dataCompanyUtils\";\r\nimport { getStartStopDates } from \"../../services/companyDetails\";\r\n\r\nexport const DateRange = () => {\r\n  const [maxDateRange, setMaxDateRange] = useState(null);\r\n  const [minDateRange, setMinDateRange] = useState(null);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const incomes = useSelector(store => store.companyDetails.incomes);\r\n\r\n  useEffect(() => {\r\n    if (Boolean(incomes)) {\r\n      getStartStopDates(incomes).then(({ minDate, maxDate }) => {\r\n        if (minDate && maxDate) {\r\n          setStartDate(new Date(minDate));\r\n          setEndDate(new Date(maxDate));\r\n          if (!maxDateRange && !minDateRange) {\r\n            setMinDateRange(new Date(minDate));\r\n            setMaxDateRange(new Date(maxDate));\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, [incomes, maxDateRange, minDateRange]);\r\n\r\n  useEffect(() => {\r\n    dispatch(setDates(startDate, endDate));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [startDate, endDate]);\r\n\r\n  return (\r\n    <div className=\"company-details__date-range\">\r\n      <p>SELECT INCOME DATE RANGE</p>\r\n      <div className=\"company-details__datepickers\">\r\n        <div className=\"company-details__datepicker\">\r\n          <p>START DATE</p>\r\n          <DatePicker\r\n            selected={startDate}\r\n            onChange={date => setStartDate(date)}\r\n            selectsStart\r\n            startDate={startDate}\r\n            endDate={endDate}\r\n            minDate={minDateRange}\r\n            placeholderText=\"Select start date range\"\r\n          />\r\n        </div>\r\n        <div className=\"company-details__datepicker\">\r\n          <p>STOP DATE</p>\r\n          <DatePicker\r\n            selected={endDate}\r\n            onChange={date => setEndDate(date)}\r\n            selectsEnd\r\n            startDate={startDate}\r\n            endDate={endDate}\r\n            minDate={startDate}\r\n            maxDate={maxDateRange}\r\n            placeholderText=\"Select stop date range\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import * as actions from \"./dataCompanyActions\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const fetchCompanyDetails = id => async dispatch => {\r\n  try {\r\n    await dispatch(actions.startFetch());\r\n    const response = await axios.get(\r\n      `https://recruitment.hal.skygate.io/incomes/${id}`\r\n    );\r\n    dispatch(actions.fetchSuccess(response.data.incomes));\r\n  } catch (error) {\r\n    dispatch(actions.fetchFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const setDates = (beginDate, endDate) => async dispatch => {\r\n  try {\r\n    dispatch(actions.setBeginDate(beginDate));\r\n    dispatch(actions.setEndDate(endDate));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import * as types from \"./dataCompanyTypes\";\r\n\r\nexport const startFetch = () => {\r\n  return {\r\n    type: types.START_FETCH_COMPANY_DETAILS\r\n  };\r\n};\r\n\r\nexport const fetchSuccess = incomes => {\r\n  return {\r\n    type: types.FETCH_COMPANY_DETAILS_SUCCESS,\r\n    payload: { incomes }\r\n  };\r\n};\r\n\r\nexport const fetchFailure = error => {\r\n  return {\r\n    type: types.FETCH_COMPANY_DETAILS_FAILURE,\r\n    payload: { error }\r\n  };\r\n};\r\n\r\nexport const setBeginDate = startDate => {\r\n  return {\r\n    type: types.SET_START_DATE,\r\n    payload: { startDate }\r\n  };\r\n};\r\n\r\nexport const setEndDate = stopDate => {\r\n  return {\r\n    type: types.SET_STOP_DATE,\r\n    payload: { stopDate }\r\n  };\r\n};\r\n\r\nexport const reset = () => {\r\n  return {\r\n    type: types.RESET\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { MdError } from \"react-icons/md\";\r\n\r\nexport const Error = () => {\r\n  return (\r\n    <div className=\"error\">\r\n      <IconContext.Provider value={{ className: \"error__icon\" }}>\r\n        <MdError />\r\n      </IconContext.Provider>\r\n      <p>Ooops... Something went wrong.</p>\r\n      <p>Try again later.</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <FadeLoader size={25} color={\"#e2dd28\"} loading={true} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Error } from \"../Error\";\r\nimport { Loader } from \"../Loader\";\r\n\r\nexport const withLoading = WrappedComponent => ({\r\n  error,\r\n  loading,\r\n  ...props\r\n}) => {\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Error />\r\n  ) : (\r\n    <WrappedComponent {...props} />\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { fetchCompanyDetails } from \"../../redux/dataCompany/dataCompanyUtils\";\r\nimport { getLastMonthIncome, getIncomes } from \"../../services/companyDetails\";\r\n\r\nimport { Chart } from \"../Chart\";\r\nimport { DateRange } from \"../DateRange\";\r\nimport { withLoading } from \"../withLoading\";\r\n\r\nconst CompanyDetails = ({ basicData: { id, city, name }, openModal }) => {\r\n  const [lastMonthIncome, setLastMonthIncome] = useState(0);\r\n  const [totalIncome, setTotalIncome] = useState(0);\r\n  const [averageIncome, setAverageIncome] = useState(0);\r\n  const [monthIncomes, setMonthIncomes] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const incomes = useSelector(store => store.companyDetails.incomes);\r\n  const startDate = useSelector(store => store.companyDetails.startDate);\r\n  const stopDate = useSelector(store => store.companyDetails.stopDate);\r\n\r\n  useEffect(() => {\r\n    if (openModal && !incomes.length) {\r\n      dispatch(fetchCompanyDetails(id));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (openModal) {\r\n      getLastMonthIncome(incomes).then(sum => setLastMonthIncome(sum));\r\n    }\r\n  }, [incomes]);\r\n\r\n  useEffect(() => {\r\n    if (openModal)\r\n      getIncomes(startDate, stopDate, incomes).then(\r\n        ({ totalIncome, averageIncome, filteredIncomes }) => {\r\n          setTotalIncome(totalIncome);\r\n          setAverageIncome(averageIncome);\r\n          console.log(filteredIncomes);\r\n          setMonthIncomes(filteredIncomes);\r\n        }\r\n      );\r\n  }, [startDate, stopDate, incomes]);\r\n\r\n  return (\r\n    <div className=\"company-details\">\r\n      <h2>DETAILS</h2>\r\n      <div className=\"company-details__header\">\r\n        <p>ID</p>\r\n        <p>NAME</p>\r\n        <p>CITY</p>\r\n      </div>\r\n      <div className=\"company-details__basic-info\">\r\n        <p>{id}</p>\r\n        <p>{name}</p>\r\n        <p>{city}</p>\r\n      </div>\r\n      <div className=\"company-details__incomes\">\r\n        <div className=\"company-details__incomes income\">\r\n          <p>TOTAL INCOME</p>\r\n          <p>{totalIncome}</p>\r\n        </div>\r\n        <div className=\"company-details__incomes income\">\r\n          <p>AVERAGE INCOME</p>\r\n          <p>{averageIncome}</p>\r\n        </div>\r\n        <div className=\"company-details__incomes income\">\r\n          <p>LAST MONTH INCOME</p>\r\n          <p>{lastMonthIncome}</p>\r\n        </div>\r\n      </div>\r\n      <DateRange />\r\n      <Chart incomes={monthIncomes} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst companyDetailsWithLoading = withLoading(CompanyDetails);\r\nexport { companyDetailsWithLoading as CompanyDetails };\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { reset } from \"../../redux/dataCompany/dataCompanyActions\";\r\n\r\nimport { CompanyDetails } from \"../CompanyDetails/\";\r\n\r\nexport const CompanyDetailsModal = ({ basicData, openModal, setOpenModal }) => {\r\n  const dispatch = useDispatch();\r\n  const error = useSelector(store => store.companyDetails.error);\r\n  const loading = useSelector(store => store.companyDetails.loading);\r\n\r\n  Modal.setAppElement(\"body\");\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={openModal}\r\n      contentLabel=\"details\"\r\n      className=\"modal\"\r\n      overlayClassName=\"overlay\"\r\n    >\r\n      <CompanyDetails\r\n        loading={loading}\r\n        error={error}\r\n        basicData={basicData}\r\n        openModal={openModal}\r\n      />\r\n      <div className=\"company-details__close\">\r\n        <button\r\n          onClick={() => {\r\n            setOpenModal(false);\r\n            dispatch(reset());\r\n          }}\r\n        >\r\n          X\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport { CompanyDetailsModal } from \"../CompanyDetailsModal\";\r\n\r\nexport const TableRow = ({\r\n  id,\r\n  name,\r\n  city,\r\n  income,\r\n  details = false,\r\n  header = false\r\n}) => {\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  return (\r\n    <li className={\"table__row\" + (header ? \" header\" : \"\")}>\r\n      <p>{id}</p>\r\n      <p>{name}</p>\r\n      <p>{city}</p>\r\n      <p>{income}</p>\r\n      {details ? (\r\n        details\r\n      ) : (\r\n        <>\r\n          <button\r\n            className=\"table__row__button\"\r\n            onClick={() => setOpenModal(true)}\r\n          >\r\n            Details\r\n          </button>\r\n          <CompanyDetailsModal\r\n            basicData={{ id, name, city, income }}\r\n            openModal={openModal}\r\n            setOpenModal={setOpenModal}\r\n          />\r\n        </>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { paginateCompanies } from \"../../redux/pagination/paginationUtils\";\r\nimport { fetchCompanies } from \"../../redux/data/dataUtils\";\r\n\r\nimport { Information } from \"../Information\";\r\nimport { Pagination } from \"../Pagination\";\r\nimport { TableRow } from \"../TableRow\";\r\nimport { withLoading } from \"../withLoading\";\r\n\r\nconst Table = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const companies = useSelector(store => store.data.companies);\r\n  const filteredCompanies = useSelector(store => store.data.filteredCompanies);\r\n  const paginatedCompanies = useSelector(\r\n    store => store.pagination.paginatedCompanies\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!companies.length) dispatch(fetchCompanies());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    filteredCompanies\r\n      ? dispatch(paginateCompanies(1, filteredCompanies))\r\n      : dispatch(paginateCompanies(1, companies));\r\n  }, [companies, dispatch, filteredCompanies]);\r\n\r\n  return (\r\n    <ul>\r\n      {Object.keys(paginatedCompanies).length !== 0 && (\r\n        <>\r\n          <TableRow\r\n            id={\"ID\"}\r\n            name={\"NAME\"}\r\n            city={\"CITY\"}\r\n            income={\"INCOME\"}\r\n            header={true}\r\n            details={\"MORE\"}\r\n          />\r\n          {paginatedCompanies.map(({ id, name, city, income }) => (\r\n            <TableRow\r\n              key={id}\r\n              id={id}\r\n              name={name}\r\n              city={city}\r\n              income={income}\r\n            />\r\n          ))}\r\n          <Pagination\r\n            companies={filteredCompanies ? filteredCompanies : companies}\r\n          />\r\n        </>\r\n      )}\r\n      {Boolean(!Object.keys(paginatedCompanies).length) && (\r\n        <Information msg=\"NOTHING FOUND\" />\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst tableWithLoading = withLoading(Table);\r\nexport { tableWithLoading as Table };\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Table } from \"../Table\";\r\n\r\nexport const TableWrapper = () => {\r\n  const error = useSelector(store => store.data.error);\r\n  const loading = useSelector(store => store.data.loading);\r\n\r\n  return (\r\n    <div className=\"table\">\r\n      <div className=\"table__wrapper\">\r\n        <Table loading={loading} error={error} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./css/main.css\";\r\n\r\nimport store from \"./redux/store\";\r\n\r\nimport { Search } from \"./components/Search\";\r\nimport { TableWrapper } from \"./components/TableWrapper\";\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"App\">\r\n        <Search />\r\n        <TableWrapper />\r\n      </div>\r\n    </Provider>\r\n  );\r\n};\r\n"],"sourceRoot":""}